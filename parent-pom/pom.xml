<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.fyrj</groupId>
  <artifactId>parent-pom</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <packaging>pom</packaging>

  <name>parent-pom</name>
  <url>http://maven.apache.org</url>

    <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <junit.version>3.8.1</junit.version>
    <slf4j-log4j12.version>1.7.7</slf4j-log4j12.version>
    <slf4j.version>1.7.7</slf4j.version>
    <servlet-api.version>2.5</servlet-api.version>
    <jstl.version>1.2</jstl.version>
    <jsp-api.version>2.2</jsp-api.version>
    <jackson-databind.version>2.6.0</jackson-databind.version>
    <alibaba.fastjson.version>1.1.15</alibaba.fastjson.version>
    <commons-lang3.version>3.0</commons-lang3.version>
    <commons-collections4.version>4.0</commons-collections4.version>
    <commons-fileupload.version>1.2.2</commons-fileupload.version>
    <mysql-connector-java.version>5.1.18</mysql-connector-java.version>
    <mybatis.version>3.0.5</mybatis.version>
    <spring-core.version>4.1.6.RELEASE</spring-core.version>
    <spring-context.version>4.1.6.RELEASE</spring-context.version>
    <spring-test.version>4.1.6.RELEASE</spring-test.version>
    <spring-beans.version>4.1.6.RELEASE</spring-beans.version>
    <spring-aop.version>4.1.6.RELEASE</spring-aop.version>
    <spring-jdbc.version>4.1.6.RELEASE</spring-jdbc.version>
    <spring-tx.version>4.1.6.RELEASE</spring-tx.version>
    <spring-orm.version>4.1.6.RELEASE</spring-orm.version>
    <aspectjweaver.version>1.6.6</aspectjweaver.version>
    <cglib.version>2.2.2</cglib.version>
    <commons-io.version>2.1</commons-io.version>
    <c3p0.version>0.9.1.2</c3p0.version>
    <pinyin4j.version>2.5.0</pinyin4j.version>
    <mybatis-spring.version>1.0.1</mybatis-spring.version>
    <spring-webmvc.version>4.1.6.RELEASE</spring-webmvc.version>
    <druid.version>1.0.11</druid.version>
    <jedis.version>2.6.2</jedis.version>
    <spring.data.redis.version>1.5.0.RELEASE</spring.data.redis.version>
    <json-lib-ext-spring.version>1.0.2</json-lib-ext-spring.version>
    
    <maven-compiler-plugin.version>2.5.1</maven-compiler-plugin.version>
    <maven-source-plugin.version>2.2.1</maven-source-plugin.version>
    <jetty-maven-plugin.version>8.1.8.v20121106</jetty-maven-plugin.version>
	<maven.antrun.plugin.version>1.8</maven.antrun.plugin.version>
	<maven.assembly.plugin.version>2.5.4</maven.assembly.plugin.version>

    <com.google.guava.version>18.0</com.google.guava.version>
    <com.rabbitmq.amqp-client.version>3.6.5</com.rabbitmq.amqp-client.version>
    <spring.amqp.version>1.6.1.RELEASE</spring.amqp.version>
    <apache-ant-zip.version>2.3</apache-ant-zip.version>
    <asm.version>3.3.1</asm.version>
    <org.apache.ant.version>1.9.4</org.apache.ant.version>
    
    <!-- dubbo相关 -->
    <com.alibaba.dubbo.version>2.5.3</com.alibaba.dubbo.version>
    <org.apache.zookeeper.version>3.3.3</org.apache.zookeeper.version>
    <com.101tec.zkclient.version>0.3</com.101tec.zkclient.version>
    
    <jetty.port>10001</jetty.port>
    
    <parent.web.version>0.0.1-SNAPSHOT</parent.web.version>
    
    <nexus.content>http://192.168.1.199:8081/nexus/content</nexus.content>
  </properties>
	
	<modules>
		<module>../parent-web</module>
		<module>../framework</module>
	</modules>
	
	<!-- 项目发布私服配置-->
	<distributionManagement>
		<repository>
			<id>nexus-snapshots</id>
			<name>Sonatype Nexus Releases</name>
			<url>${nexus.content}/repositories/releases</url>
		</repository>
		<snapshotRepository>
			<id>nexus-snapshots</id>
			<name>Sonatype Nexus Snapshots</name>
			<url>${nexus.content}/repositories/snapshots</url>
		</snapshotRepository>
	</distributionManagement>
	
	<!-- 所有项目都会用到的依赖 -->
	<dependencyManagement>
		<dependencies>
			 <dependency><!-- 单元测试 -->
		     	 <groupId>junit</groupId>
		     	 <artifactId>junit</artifactId>
	      		 <version>${junit.version}</version>
		     	 <scope>test</scope>
		    </dependency>
		    <dependency> <!-- 引入SLF4J日志框架，将会同时引入slf4j-log4j12-1.7.7.jar ; slf4j-api-1.7.7.jar ;log4j-1.2.17.jar-->
		         <groupId>org.slf4j</groupId>
		         <artifactId>slf4j-log4j12</artifactId>
		         <version>${slf4j-log4j12.version}</version>
		    </dependency>
	    	<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
				<version>${slf4j.version}</version>
			</dependency>
		    <dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-databind</artifactId>
				<version>${jackson-databind.version}</version>
			</dependency>
			<dependency>
				<groupId>com.alibaba</groupId>
				<artifactId>fastjson</artifactId>
				<version>${alibaba.fastjson.version}</version>
			</dependency>
			<!-- apache 工具包 -->
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-lang3</artifactId>
				<version>${commons-lang3.version}</version>	
			</dependency>
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-collections4</artifactId>
				<version>${commons-collections4.version}</version>
			</dependency>
			<dependency>
				<groupId>commons-fileupload</groupId>
				<artifactId>commons-fileupload</artifactId>
				<version>${commons-fileupload.version}</version>
			</dependency>
			<dependency><!-- mysql链接驱动 -->
				<groupId>mysql</groupId>
				<artifactId>mysql-connector-java</artifactId>
				<version>${mysql-connector-java.version}</version>
			</dependency>
			<dependency><!-- mybatis -->
				<groupId>org.mybatis</groupId>
				<artifactId>mybatis</artifactId>
				<version>${mybatis.version}</version>
			</dependency>
			<dependency><!-- spring 核心 -->
				<groupId>org.springframework</groupId>
				<artifactId>spring-core</artifactId>
				<version>${spring-core.version}</version>
			</dependency>
			<dependency><!-- spring 运行上下文环境 -->
				<groupId>org.springframework</groupId>
				<artifactId>spring-context</artifactId>
				<version>${spring-context.version}</version>
			</dependency>
			<dependency><!-- spring 单元测试 -->
				<groupId>org.springframework</groupId>
				<artifactId>spring-test</artifactId>
				<version>${spring-test.version}</version>
			</dependency>
			<dependency><!-- sping bean -->
				<groupId>org.springframework</groupId>
				<artifactId>spring-beans</artifactId>
				<version>${spring-beans.version}</version>
			</dependency>
			<dependency><!-- spring aop -->
				<groupId>org.springframework</groupId>
				<artifactId>spring-aop</artifactId>
				<version>${spring-aop.version}</version>
			</dependency>
			<dependency><!-- spring jdbc -->
				<groupId>org.springframework</groupId>
				<artifactId>spring-jdbc</artifactId>
				<version>${spring-jdbc.version}</version>
			</dependency>
			<dependency><!-- spring 事务管理 -->
				<groupId>org.springframework</groupId>
				<artifactId>spring-tx</artifactId>
				<version>${spring-tx.version}</version>
			</dependency>
			<dependency><!-- orm -->
				<groupId>org.springframework</groupId>
				<artifactId>spring-orm</artifactId>
				<version>${spring-orm.version}</version>
			</dependency>
			<dependency>
				<groupId>org.aspectj</groupId>
				<artifactId>aspectjweaver</artifactId>
				<version>${aspectjweaver.version}</version>
				</dependency>
			<dependency>
				<groupId>cglib</groupId>
				<artifactId>cglib</artifactId>
				<version>${cglib.version}</version>
			</dependency>
			<dependency>
				<groupId>commons-io</groupId>
				<artifactId>commons-io</artifactId>
				<version>${commons-io.version}</version>
			</dependency>
			<dependency><!-- 连接池 -->
				<groupId>c3p0</groupId>
				<artifactId>c3p0</artifactId>
				<version>${c3p0.version}</version>
			</dependency>
			<dependency><!-- 汉字拼音转换-->
				<groupId>com.belerweb</groupId>
				<artifactId>pinyin4j</artifactId>
				<version>${pinyin4j.version}</version>
			</dependency>
			<dependency>
				<groupId>org.mybatis</groupId>
				<artifactId>mybatis-spring</artifactId>
				<version>${mybatis-spring.version}</version>
			</dependency>
			<!-- framework web端相关jar -->
			<dependency>  <!-- servlet api依赖 -->
				<groupId>javax.servlet</groupId>
				<artifactId>servlet-api</artifactId>
				<version>${servlet-api.version}</version>
			</dependency>
		    <dependency> <!-- JSTL -->
				<groupId>javax.servlet</groupId>
				<artifactId>jstl</artifactId>
				<version>${jstl.version}</version>
			</dependency>
			<dependency> <!-- JSP  -->
				<groupId>javax.servlet.jsp</groupId>
				<artifactId>jsp-api</artifactId>
				<version>${jsp-api.version}</version>
			</dependency>
			<dependency><!-- spring webmvc框架 -->
				<groupId>org.springframework</groupId>
				<artifactId>spring-webmvc</artifactId>
				<version>${spring-webmvc.version}</version>
			</dependency>
			<!-- 数据库连接池 -->
      	    <dependency>
			  	<groupId>com.alibaba</groupId>
				<artifactId>druid</artifactId>
				<version>${druid.version}</version>
			</dependency>
			<dependency><!-- redis缓存 -->  
		        <groupId>redis.clients</groupId>  
		        <artifactId>jedis</artifactId>  
		        <version>${jedis.version}</version>  
		    </dependency> 
	    	<dependency>
				<groupId>org.springframework.data</groupId>
				<artifactId>spring-data-redis</artifactId>
				<version>${spring.data.redis.version}</version>
			</dependency> 
		    <dependency><!-- json2 -->
				<groupId>net.sf.json-lib</groupId>
				<artifactId>json-lib-ext-spring</artifactId>
				<version>${json-lib-ext-spring.version}</version>
			</dependency>
			<dependency><!-- goole guava工具jar -->
			    <groupId>com.google.guava</groupId>
			    <artifactId>guava</artifactId>
			    <version>${com.google.guava.version}</version>
			</dependency>
			<!-- rabbit jar -->
			<dependency>
				<groupId>com.rabbitmq</groupId>
				<artifactId>amqp-client</artifactId>
				<version>${com.rabbitmq.amqp-client.version}</version>
			</dependency>
			<!-- spring rabbit mq  -->
			<dependency>
				<groupId>org.springframework.amqp</groupId>
				<artifactId>spring-amqp</artifactId>
				<version>${spring.amqp.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.amqp</groupId>
				<artifactId>spring-rabbit</artifactId>
				<version>${spring.amqp.version}</version>
			</dependency>
			 <!-- asm字节码增强工具
			<dependency>
				<groupId>asm</groupId>
			    <artifactId>asm</artifactId>
			    <version>${asm.version}</version>
			</dependency>
			<dependency>
				<groupId>com.ckfinder</groupId>
				<artifactId>apache-ant-zip</artifactId>
				<version>${apache-ant-zip.version}</version>
			</dependency>
			
			<dependency>
			    <groupId>org.apache.ant</groupId>
			    <artifactId>ant</artifactId>
			    <version>${org.apache.ant.version}</version>
			</dependency> -->
			
			<dependency>
				<groupId>com.alibaba</groupId>
				<artifactId>dubbo</artifactId>
				<version>${com.alibaba.dubbo.version}</version>
			</dependency>
			<dependency>
			    <groupId>org.apache.zookeeper</groupId>
			    <artifactId>zookeeper</artifactId>
			    <version>${org.apache.zookeeper.version}</version>
			</dependency>
			<dependency>
			    <groupId>com.101tec</groupId>
			    <artifactId>zkclient</artifactId>
			    <version>${com.101tec.zkclient.version}</version>
			</dependency>
	 	</dependencies>
	</dependencyManagement>
	
	<!-- 定义所有项目都会用到的插件 -->
	<build>
		<pluginManagement>
			<plugins>
				<!-- 全局配置，所有基于该插件的生命周期都会用到这里的配置 -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>${maven-compiler-plugin.version}</version>
					<configuration>
						<source>1.7</source>
						<target>1.7</target>
						<encoding>UTF-8</encoding>
						  <compilerArguments>  
			                  <verbose />  
				              <bootclasspath>${java.home}/lib/rt.jar;${java.home}/lib/jce.jar</bootclasspath>  
				        </compilerArguments>  
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-source-plugin</artifactId>
					<version>${maven-source-plugin.version}</version>
					<configuration>
						<attach>true</attach>
					</configuration>
					<executions>
						<execution>
						<!-- 绑定声明周期 -->
							<phase>compile</phase>
							<goals>
								<goal>jar</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
 					<plugin>
                   <groupId>org.mortbay.jetty</groupId>
	               <artifactId>jetty-maven-plugin</artifactId>
	               <version>${jetty-maven-plugin.version}</version>
	               <configuration>
	                   <webApp>
	                       <contextPath>/${project.build.finalName}</contextPath>
	                   </webApp>
	                   <connectors>
	                       <connector implementation="org.eclipse.jetty.server.nio.SelectChannelConnector">
 	                           <port>${jetty.port}</port>
	                           <maxIdleTime>60000</maxIdleTime>
	                       </connector>
	                   </connectors>
	               </configuration>
	           </plugin>
				<!-- Ant插件 -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-antrun-plugin</artifactId>
					<version>${maven.antrun.plugin.version}</version>
					<executions>
						<execution>
							<id>default</id>
							<phase>install</phase>
							<goals>
								<goal>run</goal>
							</goals>
							<configuration>
								<target name="default">
									<!-- 打印环境变量 -->
									<echo>Maven project basedir = ${project.basedir}</echo>
									<echo>Maven project name = ${project.name}</echo>
									<echo>Maven project version = ${project.version}</echo>
									<echo>Maven project groupId = ${project.groupId}</echo>
									<echo>Maven project artifactId = ${project.artifactId}</echo>
									<echo>Maven project packaging = ${project.packaging}</echo>
									<echo>Maven project build sourceEncoding = ${project.build.sourceEncoding}</echo>
									<echo>Maven project build finalName = ${project.build.finalName}.${project.packaging}</echo>
									<echo>Maven project build directory = ${project.build.directory}</echo>
									<echo>Maven project build sourceDirectory = ${project.build.sourceDirectory}</echo>
									<echo>Maven project build outputDirectory = ${project.build.outputDirectory}</echo>
									<echo>Maven project build testSourceDirectory = ${project.build.testSourceDirectory}</echo>
									<echo>Maven project build testOutputDirectory = ${project.build.testOutputDirectory}</echo>
									<echo>Maven project reporting outputDirectory = ${project.reporting.outputDirectory}</echo>
									<echo>Maven settings localRepository = ${settings.localRepository}</echo>
									<echo>Spring instrument = ${settings.localRepository}/org/springframework/spring-instrument/${spring.instrument.version}/spring-instrument-${spring.instrument.version}.jar</echo>
									<echo>System default encoding = ${file.encoding}</echo>
									<!-- 清空日志文件
									<delete failonerror="false">
										<fileset dir="./" includes="**/*.log" />
										<fileset dir="./" includes="**/*.log.*" />
										<fileset dir="./" includes="*.gz" />
										<fileset dir="./" includes="*.tmp" />
									</delete> -->
									<!-- 自动检测 WAR 项目打包 -->
									<condition property="project.packaging.unzip.switch">
										<and>
											<equals arg1="${project.packaging}" arg2="war" casesensitive="false" trim="true" />
										</and>
									</condition>
									<condition property="project.packaging.unzip.remove">
										<not>
											<available file="${project.basedir}/.asset.exclude" />
										</not>
									</condition>
									<macrodef name="project.packaging.unzip.macro">
										<sequential>
											<unzip src="${maven.dependency.com.fyrj.parent-web.jar.path}" dest="${project.build.directory}">
												<patternset>
													<include name="com/fyrj/asset/**" if="${project.packaging.unzip.remove}" />
													<include name="com/fyrj/templates/**" if="${project.packaging.unzip.remove}" />
												</patternset>
											</unzip>
											<move file="${project.build.directory}/com/fyrj/asset" tofile="${project.basedir}/src/main/webapp/asset" failonerror="false" />
											<move file="${project.build.directory}/com/fyrj/templates" tofile="${project.basedir}/src/main/webapp/WEB-INF" failonerror="false" />
										</sequential>
									</macrodef>
								 	<script language="javascript">
										try {
											if (project.getProperty("project.packaging.unzip.switch")) project.createTask("project.packaging.unzip.macro").perform();
										} catch (ex) {
											println("    [unzip] Warning: Could not expand file " + project.getProperty("src") + " into " + project.getProperty("dest"));
										}
									</script>
								</target>
							</configuration>
						</execution>
					</executions>
				</plugin>
				
	           	<!-- 自定义装配插件 -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-assembly-plugin</artifactId>
					<version>${maven.assembly.plugin.version}</version>
					<configuration>
						<!-- 是否在生成的打包文件的文件名中包含assembly id -->
						<appendAssemblyId>false</appendAssemblyId>
						<descriptors>
							<descriptor>src/main/assembly/default.xml</descriptor>
						</descriptors>
					</configuration>
					<executions>
						<!--   execution的设置是为了将maven-assembly-plugin继承到标准的maven打包过程中，
							这样在运行maven-package时就会执行maven-assembly-plugin的操作，从而实现我们需要的自定义打包 -->
						<execution>
							<id>make-assembly</id>
							<phase>package</phase>
							<goals>
								<goal>single</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				
			</plugins>
		</pluginManagement>
	</build>
	
</project>
